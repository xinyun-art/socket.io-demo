socket:  Socket { 
  nsp: Namespace {
    name: '/',    
    server: Server {
      nsps: [Object],
      parentNsps: Map {},
      _path: '/socket.io',
      _serveClient: true,
      parser: [Object],
      encoder: Encoder {},
      _adapter: [Function: Adapter],
      _origins: '*:*',
      sockets: [Circular],
      eio: [Server],
      httpServer: [Server],
      engine: [Server]
    },
    sockets: { '1QGmpsa57tvUG2rkAAAB': [Circular] },
    connected: { '1QGmpsa57tvUG2rkAAAB': [Circular] },
    fns: [],
    ids: 0,
    rooms: [],
    flags: {},
    adapter: Adapter {
      nsp: [Circular],
      rooms: [Object],
      sids: [Object],
      encoder: Encoder {}
    },
    _events: [Object: null prototype] { connection: [Function] },
    _eventsCount: 1
  },
  server: Server {
    nsps: { '/': [Namespace] },
    parentNsps: Map {},
    _path: '/socket.io',
    _serveClient: true,
    parser: {
      protocol: 4,
      types: [Array],
      CONNECT: 0,
      DISCONNECT: 1,
      EVENT: 2,
      ACK: 3,
      ERROR: 4,
      BINARY_EVENT: 5,
      BINARY_ACK: 6,
      Encoder: [Function: Encoder],
      Decoder: [Function: Decoder]
    },
    encoder: Encoder {},
    _adapter: [Function: Adapter],
    _origins: '*:*',
    sockets: Namespace {
      name: '/',
      server: [Circular],
      sockets: [Object],
      connected: [Object],
      fns: [],
      ids: 0,
      rooms: [],
      flags: {},
      adapter: [Adapter],
      _events: [Object: null prototype],
      _eventsCount: 1
    },
    eio: Server {
      clients: [Object],
      clientsCount: 1,
      wsEngine: 'ws',
      pingTimeout: 5000,
      pingInterval: 25000,
      upgradeTimeout: 10000,
      maxHttpBufferSize: 100000000,
      transports: [Array],
      allowUpgrades: true,
      allowRequest: [Function: bound ],
      cookie: 'io',
      cookiePath: '/',
      cookieHttpOnly: true,
      perMessageDeflate: [Object],
      httpCompression: [Object],
      initialPacket: [Array],
      ws: [WebSocketServer],
      _events: [Object: null prototype],
      _eventsCount: 1
    },
    httpServer: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 2,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '6::::3000',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 4
    },
    engine: Server {
      clients: [Object],
      clientsCount: 1,
      wsEngine: 'ws',
      pingTimeout: 5000,
      pingInterval: 25000,
      upgradeTimeout: 10000,
      maxHttpBufferSize: 100000000,
      transports: [Array],
      allowUpgrades: true,
      allowRequest: [Function: bound ],
      cookie: 'io',
      cookiePath: '/',
      cookieHttpOnly: true,
      perMessageDeflate: [Object],
      httpCompression: [Object],
      initialPacket: [Array],
      ws: [WebSocketServer],
      _events: [Object: null prototype],
      _eventsCount: 1
    }
  },
  adapter: Adapter {
    nsp: Namespace {
      name: '/',
      server: [Server],
      sockets: [Object],
      connected: [Object],
      fns: [],
      ids: 0,
      rooms: [],
      flags: {},
      adapter: [Circular],
      _events: [Object: null prototype],
      _eventsCount: 1
    },
    rooms: { '1QGmpsa57tvUG2rkAAAB': [Room] },
    sids: { '1QGmpsa57tvUG2rkAAAB': [Object] },
    encoder: Encoder {}
  },
  id: '1QGmpsa57tvUG2rkAAAB',
  client: Client {
    server: Server {
      nsps: [Object],
      parentNsps: Map {},
      _path: '/socket.io',
      _serveClient: true,
      parser: [Object],
      encoder: Encoder {},
      _adapter: [Function: Adapter],
      _origins: '*:*',
      sockets: [Namespace],
      eio: [Server],
      httpServer: [Server],
      engine: [Server]
    },
    conn: Socket {
      id: '1QGmpsa57tvUG2rkAAAB',
      server: [Server],
      upgrading: false,
      upgraded: false,
      readyState: 'open',
      writeBuffer: [],
      packetsFn: [],
      sentCallbackFn: [],
      cleanupFn: [Array],
      request: [IncomingMessage],
      remoteAddress: '::ffff:127.0.0.1',
      checkIntervalTimer: null,
      upgradeTimeoutTimer: null,
      pingTimeoutTimer: Timeout {
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 1035484,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(asyncId)]: 267,
        [Symbol(triggerId)]: 221
      },
      transport: [XHR],
      _events: [Object: null prototype],
      _eventsCount: 3
    },
    encoder: Encoder {},
    decoder: Decoder { reconstructor: null, _callbacks: [Object] },
    id: '1QGmpsa57tvUG2rkAAAB',
    request: IncomingMessage {
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/socket.io/?EIO=3&transport=polling&t=NIRzI-_',
      method: 'GET',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: false,
      _dumped: true,
      _query: [Object: null prototype],
      res: [ServerResponse],
      cleanup: [Function: cleanup],
      [Symbol(kCapture)]: false
    },
    onclose: [Function: bound ],
    ondata: [Function: bound ],
    onerror: [Function: bound ],
    ondecoded: [Function: bound ],
    sockets: { '1QGmpsa57tvUG2rkAAAB': [Circular] },
    nsps: { '/': [Circular] },
    connectBuffer: []
  },
  conn: Socket {
    id: '1QGmpsa57tvUG2rkAAAB',
    server: Server {
      clients: [Object],
      clientsCount: 1,
      wsEngine: 'ws',
      pingTimeout: 5000,
      pingInterval: 25000,
      upgradeTimeout: 10000,
      maxHttpBufferSize: 100000000,
      transports: [Array],
      allowUpgrades: true,
      allowRequest: [Function: bound ],
      cookie: 'io',
      cookiePath: '/',
      cookieHttpOnly: true,
      perMessageDeflate: [Object],
      httpCompression: [Object],
      initialPacket: [Array],
      ws: [WebSocketServer],
      _events: [Object: null prototype],
      _eventsCount: 1
    },
    upgrading: false,
    upgraded: false,
    readyState: 'open',
    writeBuffer: [],
    packetsFn: [],
    sentCallbackFn: [],
    cleanupFn: [ [Function], [Function] ],
    request: IncomingMessage {
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/socket.io/?EIO=3&transport=polling&t=NIRzI-_',
      method: 'GET',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: false,
      _dumped: true,
      _query: [Object: null prototype],
      res: [ServerResponse],
      cleanup: [Function: cleanup],
      [Symbol(kCapture)]: false
    },
    remoteAddress: '::ffff:127.0.0.1',
    checkIntervalTimer: null,
    upgradeTimeoutTimer: null,
    pingTimeoutTimer: Timeout {
      _idleTimeout: 30000,
      _idlePrev: [TimersList],
      _idleNext: [TimersList],
      _idleStart: 1035484,
      _onTimeout: [Function],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: true,
      [Symbol(asyncId)]: 267,
      [Symbol(triggerId)]: 221
    },
    transport: XHR {
      readyState: 'open',
      discarded: false,
      closeTimeout: 30000,
      maxHttpBufferSize: 100000000,
      httpCompression: [Object],
      supportsBinary: true,
      _events: [Object: null prototype],
      _eventsCount: 5,
      sid: '1QGmpsa57tvUG2rkAAAB',
      req: null,
      res: null,
      writable: false
    },
    _events: [Object: null prototype] {
      close: [Array],
      data: [Function: bound ],
      error: [Function: bound ]
    },
    _eventsCount: 3
  },
  rooms: {},
  acks: {},
  connected: true,
  disconnected: false,
  handshake: {
    headers: {
      host: '127.0.0.1:3000',
      connection: 'keep-alive',
      connected: true,
      disconnected: false,
      handshake: {
        headers: {
          host: '127.0.0.1:3000',
          connection: 'keep-alive',
          pragma: 'no-cache',
          'cache-control': 'no-cache',
          accept: '*',
          'user-agent': 'Mozilla/5.0 (iPhone; CPU iPhone OS 13_2_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.3 Mobile/15E148 Safari/604.1',
          'sec-fetch-site': 'same-origin',
          'sec-fetch-mode': 'cors',
          'sec-fetch-dest': 'empty',
          referer: 'http://127.0.0.1:3000/',
          'accept-encoding': 'gzip, deflate, br',
          'accept-language': 'zh-CN,zh;q=0.9',
          cookie: '_ga=GA1.1.393036426.1600064265; app_domain=; h5_domain=; sport_domain=; io=Qmt_DyFI_v4CwKeBAAAA'
        },
      time: 'Thu Sep 17 2020 20:06:11 GMT+0800 (GMT+08:00)',
      address: '::ffff:127.0.0.1',
      xdomain: false,
      secure: false,
      issued: 1600344371140,
      url: '/socket.io/?EIO=3&transport=polling&t=NIRzI-_',
      query: { EIO: '3', transport: 'polling', t: 'NIRzI-_' }
    },
  fns: [],
  flags: {},
  _rooms: []
}